// <auto-generated />
using System;
using Backend_REST_API_ZPP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendRESTAPIZPP.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250326003055_AddNewFieldToUser2")]
    partial class AddNewFieldToUser2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Polish_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend_REST_API_ZPP.Models.Kierunek", b =>
                {
                    b.Property<int>("IdKierunek")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Kierunek");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKierunek"));

                    b.Property<string>("Nazwa")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TypKierunku")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Typ_Kierunku");

                    b.HasKey("IdKierunek")
                        .HasName("PK__Kierunek__9FEFDE1E8AD0DBD7");

                    b.ToTable("Kierunek", (string)null);
                });

            modelBuilder.Entity("Backend_REST_API_ZPP.Models.Prowadzacy", b =>
                {
                    b.Property<int>("IdProwadzacy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Prowadzacy");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProwadzacy"));

                    b.Property<string>("Imie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nazwisko")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Skrot")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Tytul")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdProwadzacy")
                        .HasName("PK__Prowadza__8EF96D06400BC302");

                    b.ToTable("Prowadzacy", (string)null);
                });

            modelBuilder.Entity("Backend_REST_API_ZPP.Models.Przedmiot", b =>
                {
                    b.Property<int>("IdTowaru")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Towaru");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTowaru"));

                    b.Property<int?>("IdKierunek")
                        .HasColumnType("int")
                        .HasColumnName("ID_Kierunek");

                    b.Property<int?>("IdProwadzacy")
                        .HasColumnType("int")
                        .HasColumnName("ID_Prowadzacy");

                    b.Property<int?>("IdSala")
                        .HasColumnType("int")
                        .HasColumnName("ID_Sala");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Skrot")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Typ")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTowaru")
                        .HasName("PK__Przedmio__B4EDE03199A8138C");

                    b.HasIndex("IdKierunek");

                    b.HasIndex("IdProwadzacy");

                    b.HasIndex("IdSala");

                    b.ToTable("Przedmiot", (string)null);
                });

            modelBuilder.Entity("Backend_REST_API_ZPP.Models.Sala", b =>
                {
                    b.Property<int>("IdSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Sala");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSala"));

                    b.Property<string>("Budynek")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pomieszczenie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdSala")
                        .HasName("PK__Sala__2071DEA7ECDCAAA0");

                    b.ToTable("Sala", (string)null);
                });

            modelBuilder.Entity("Backend_REST_API_ZPP.Models.Przedmiot", b =>
                {
                    b.HasOne("Backend_REST_API_ZPP.Models.Kierunek", "IdKierunekNavigation")
                        .WithMany("Przedmiots")
                        .HasForeignKey("IdKierunek")
                        .HasConstraintName("FK__Przedmiot__ID_Ki__3F466844");

                    b.HasOne("Backend_REST_API_ZPP.Models.Prowadzacy", "IdProwadzacyNavigation")
                        .WithMany("Przedmiots")
                        .HasForeignKey("IdProwadzacy")
                        .HasConstraintName("FK__Przedmiot__ID_Pr__3D5E1FD2");

                    b.HasOne("Backend_REST_API_ZPP.Models.Sala", "IdSalaNavigation")
                        .WithMany("Przedmiots")
                        .HasForeignKey("IdSala")
                        .HasConstraintName("FK__Przedmiot__ID_Sa__3E52440B");

                    b.Navigation("IdKierunekNavigation");

                    b.Navigation("IdProwadzacyNavigation");

                    b.Navigation("IdSalaNavigation");
                });

            modelBuilder.Entity("Backend_REST_API_ZPP.Models.Kierunek", b =>
                {
                    b.Navigation("Przedmiots");
                });

            modelBuilder.Entity("Backend_REST_API_ZPP.Models.Prowadzacy", b =>
                {
                    b.Navigation("Przedmiots");
                });

            modelBuilder.Entity("Backend_REST_API_ZPP.Models.Sala", b =>
                {
                    b.Navigation("Przedmiots");
                });
#pragma warning restore 612, 618
        }
    }
}
